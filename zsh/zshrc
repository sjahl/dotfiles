autoload -Uz compinit promptinit colors
compinit
promptinit
colors

PROMPT="%U%B%n@%m%u %~%{$reset_color%}
%B%#%{$reset_color%}%b "

HISTFILE=~/.zhistfile
HISTSIZE=1000
SAVEHIST=1000
setopt inc_append_history autocd extendedglob nomatch notify sharehistory brace_ccl

# keybindings
bindkey -e

# aliases
alias ll='ls -al'
alias sl='ls'
alias cdd='cd'
alias xs='cd'
alias cim='vim'
alias vi='vim'
alias clearmemcache='sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"'
alias psc='ps xawf -eo pid,user,cgroup,args'
alias srd='screen -rd'
alias sr='screen -r'
alias xl='i3lock -n -c 333333'
alias vimtab='vim "+set noexpandtab"'
alias gvimtab='gvim "+set noexpandtab"'
alias ta='tmux a'
alias gpom='git push origin master'
alias mosh='mosh --server="LANG=en_US.UTF-8 mosh-server"'
alias afshome='cd /afs/csail/u/j/jahl'
alias rogue='mutt -F ~/git/dotfiles/.mutt/roguerc'
alias gmail='mutt -F ~/.mutt/gmail.muttrc'
alias backup-inc='cyphertite -I /home/jahl/.cyphertite/dirs -cvRf home_1.ct /home/jahl'
alias backup-zero='cyphertite -I /home/jahl/.cyphertite/dirs -0vRf home_1.ct /home/jahl'
alias backup-cull='cyphertitectl cull'
alias servergvim='gvim --servername JAHL'
alias clientgvim='gvim --servername JAHL --remote-tab'
alias ssh-nokerberos='ssh -o GSSAPIAuthentication=no -o GSSAPIKeyExchange=no -o GSSAPIDelegateCredentials=no -o GSSAPITrustDNS=no'

case ${OSTYPE} in
    darwin*)
        alias ls='ls -G' ;;
    linux*)
        alias ls='ls --color=always' ;;
esac

# functions

function extract()
{
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xvjf $1     ;;
            *.tar.gz)    tar xvzf $1     ;;
            *.bz2)       bunzip2 $1      ;;
            *.rar)       unrar x $1      ;;
            *.gz)        gunzip $1       ;;
            *.tar)       tar xvf $1      ;;
            *.tbz2)      tar xvjf $1     ;;
            *.tgz)       tar xvzf $1     ;;
            *.zip)       unzip $1        ;;
            *.Z)         uncompress $1   ;;
            *.7z)        7z x $1         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
            echo "'$1' is not a valid file"
    fi
}

function passgen() {
    if [ "$1" ]; then
        chars=$1
    else
        chars='12'
    fi
    openssl rand -base64 $chars
}

[ -n "$TMUX" ] && export TERM=screen
